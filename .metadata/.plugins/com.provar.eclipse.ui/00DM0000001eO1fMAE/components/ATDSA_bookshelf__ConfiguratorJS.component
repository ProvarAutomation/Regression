<apex:component layout="none">

    <apex:attribute type="ATDSA_bookshelf__MobileAppConfig__c" name="mobileAppConfig" required="true" description="Mobile App Configuration" />
    <apex:attribute type="Boolean" name="isSubCategorySelected" required="true" description="True when subcategory selected." />
    <apex:attribute type="Boolean" name="categoryLevels" required="true" description="Category levels!" />
    <apex:attribute type="ATDSA_bookshelf__Category__c" name="selectedCategory" required="true" description="selected category" />
    
            <script type="text/javascript" >
                window.onbeforeunload = unloadPage;
                var packagePrefix = 'ModelM__';
                jQuery.noConflict();

                function setupTree(nodes, fromScratch) {
                    var $tree = jQuery('ul#tree');
                    if(fromScratch) {
                        $tree.empty();   
                        jQuery('select#selectParentCategory').empty();
                    }    
                    
                    var numAdded = 0;
                    var i = 0;
                    while(numAdded < nodes.length) {
                        if(addItem(nodes[i])) {
                            numAdded++;
                        }
                        
                        i = ++i % nodes.length;   
                    }
                    
                    $tree.find('div').unbind().click(function(event) {
                        event.stopPropagation();
                        var $that   = jQuery(this);
                        var $parent = jQuery(this).parent();
                        
                        jQuery('.active-item').removeClass('active-item');
                        $that.addClass('active-item');
                        
                        selectCategoryAndCMC($that.attr('cmc'), $that.attr('cat'));
                        /*
                        if($parent.hasClass('parent')) {
                            selectCategoryMobileConfig($that.attr('cmc'));
                        } else if($parent.hasClass('child')) {
                            selectSubCategory($that.attr('cat'));
                        }
                        */
                        return false;
                    });  
                    
                    $tree.find('span.exp-coll').click(function() {
                        event.stopPropagation();
                        var $kids = jQuery(this).parent().next('ul');
                        if($kids.length) {
                            $kids.toggle();
                            toggleText(jQuery(this), '+', '-');
                        }
                        return false;
                    });
                
                    $tree.find('span.delete-item').click(function() {
                        event.stopPropagation();
                        if(confirm('Are you sure you want to remove this category?')) {
                            var recId = jQuery(this).parent().attr('cat');
                            jQuery(this).parent().parent().remove();
                            if(recId) {
                                deleteSubCategoryById(recId);
                                jQuery("#tabHeader_4").trigger('click');
                            }
                        }
                        
                        return false;
                    });      
                }
                
                function toggleText($ele, text1, text2) {
                    if($ele.text() === text1) {
                        $ele.text(text2);
                    } else {
                        $ele.text(text1);
                    }
                }
                
                function addItem(item) {
                    if(item.ModelM__CategoryId__r.ModelM__Parent_Category__c) {
                        return addChild(item);
                    } else {
                        return addParent(item);
                    }
                }
                
                function addParent(item) {
                    var $tree = jQuery('ul#tree');

                    if($tree.find('div[cat="' + item.ModelM__CategoryId__c + '"]').length === 0) {
                        $tree.append(getItemMarkup(item, 'parent', true));
                        jQuery('select#selectParentCategory').append(getOptionMarkup(item));
                        return true;
                    }
                    
                    return false;
                }
                
                function getItemMarkup(item, additionalClasses, topLevel) {
                    var deletable = !topLevel ? '<span class="icon delete-item">X</span>' : '';
                    return '<li class="' + additionalClasses + '">' +
                               '<div class="no-kids" cmc="' + item.Id + '" cat="' + item.ModelM__CategoryId__c + '">' +
                                   deletable +
                                   '<span class="tree-item">' + item.ModelM__CategoryId__r.Name + '</span>' +
                               '</div>' +
                           '</li>';    
                }
                
                function getOptionMarkup(item) {
                    var parent = '';
                    if(item.ModelM__CategoryId__r && 
                       item.ModelM__CategoryId__r.ModelM__Parent_Category__r && 
                       item.ModelM__CategoryId__r.ModelM__Parent_Category__r.Name) {
                    
                        parent = ' (Parent: ' + item.ModelM__CategoryId__r.ModelM__Parent_Category__r.Name + ')';
                    }
                                  
                    return '<option cmc="' + item.Id + 
                                 '" cat="' + item.ModelM__CategoryId__c + 
                               '" value="' + item.ModelM__CategoryId__c + '">' + 
                               item.ModelM__CategoryId__r.Name + parent + '</option>';
                }
                
                function addChild(item) {
                    var $tree    = jQuery('ul#tree');
                    var $parent  = $tree.find('div[cat="' + item.ModelM__CategoryId__r.ModelM__Parent_Category__c + '"]');
                    var $current = $tree.find('div[cat="' + item.ModelM__CategoryId__c + '"]');
                    var $listDad = jQuery('select#selectParentCategory').find('option[cat="' + item.ModelM__CategoryId__r.ModelM__Parent_Category__c + '"]');
                    
                    if($parent.length === 1 && $current.length === 0) {
                        if($parent.hasClass('has-kids')) {
                            $parent.next('ul').append(getItemMarkup(item, 'child', false));       
                        } else {
                            $parent.removeClass('no-kids')
                                   .addClass('has-kids')
                                   .prepend('<span class="icon exp-coll">+</span>')
                                   .after('<ul>' + getItemMarkup(item, 'child', false) + '</ul>');            
                        }
                        
                        $listDad.after(getOptionMarkup(item));
                        return true;
                    }
                    
                    return false;
                }

                function renderCategories() {
                    ModelM.App_Config_Controller_JS.getCategoryConfigs('{!mobileAppConfig.Id}', function(result, event) {
                        if(!handleRemotingError(result, event)) {
                            setupTree(result, true);
                            hideDivDialog('promptAddCategory');
                        }
                    });
                }
                
                function handleRemotingError(event) {
                    if(event.type === 'exception') {
                        alert('Something went wrong :(.  Please reload the page and try again.');
                        console.log(event);
                        console.log(result);                        
                        return true;
                    }
                    
                    return false;
                }
                
                function unloadPage() {
                    browserClose();
                }
                
                //  BEGIN: document ready, execute the following
                jQuery(document).ready(function(){
                    renderCategories();
                 
                    //  BEGIN: Set up the static widths of the panels that we're going to use
                    var resizeComponentsFunction = function() {
                        var jWindow = jQuery(window);
                        var mainHeader = jQuery("#mainHeader");
                        var tabButtons = jQuery("#tabButtons");
                        
                        var windowHeight = jWindow.height();
                        var windowWidth = jWindow.width();
                        
                        var contentHeight = windowHeight - mainHeader.height() - tabButtons.height() - 20;
                        jQuery("#tabContent").css({
                            height: contentHeight + "px"
                        });
                        jQuery("#tabContentLeft").css({
                            height: contentHeight + "px",
                            width: "400px"
                        });
                        jQuery("#tabContentRight").css({
                            height: contentHeight + "px"
                        });
                        
                        contentHeight -= 5;
                        jQuery("#tabContentLeftScroller").css({
                            width: "400px",
                            //height: "600px"
                            height: contentHeight + "px"
                        });
                        jQuery("#tabContentRightScroller").css({
                            width: "100%",
                            height: contentHeight + "px"
                        });
                        
                 
             
                    };
                    
                /*    jQuery(window).unload( function () {  
                    browserClose();
                    } );*/
                    
                    
                    jQuery(window).resize(resizeComponentsFunction);
                    resizeComponentsFunction();
                    // Adding Custom scroller to the DSA: This will replace the brower scroll
                     jQuery("html").niceScroll();
                     jQuery('#tabContentRightScroller').niceScroll();
                     jQuery('#tabContentLeftScroller').niceScroll();
                                            
                                                        
               
                    //  END: Set up the static widths of the panels that we're going to use
                    
                    theme_color_clicked();
                    ShowLandscapePreview();
                    ShowLandscapePreview_Category();
                    
                    
                    //  BEGIN: previous code from $(document).ready();
                    
                    if (jQuery.browser.mozilla) {
                        // Brower compatability issues handled here
                        jQuery('.positionx').removeClass("positionx").addClass("position_new"); 
                      }
                 
                    //Jquery slider for setting the alpha
                    var titleTextAlphaj = jQuery('input.tmp_title_text_alpha').val();
                    var introTextAlphaj  = jQuery('input.tmp_intro_text_alpha').val();
                    var buttonTextAlphaj = jQuery('input.tmp_button_text_alpha').val();
                    var overlaybackgroundj = jQuery('input.overlay_background_alpha').val();
                  
                     jQuery('.dyn-title-name-preview').css({"opacity":+titleTextAlphaj/100});
                     jQuery('.overlay_background_cls').css({"opacity":+overlaybackgroundj/100});
                    
                
                     createSlider_title('slider_title','disp','titleBarTextAlpha',titleTextAlphaj,0,100);
                     createSlider_intro('slider_intro','disp','introTextAlpha',introTextAlphaj,0,100);
                     createSlider_button('slider_button','disp','buttonTextAlpha',buttonTextAlphaj,0,100);
                      //createSlider_overlay('slider_overlay','disp','overlayBackgroundAlpha',overlaybackgroundj,0,100);
                
                    jQuery('input.Ok').live('click',function() {
                        //jQuery('.dyn-title-bg-preview').css({"background-color":"#"+jQuery('.tmp_title_bg_color').val()});
                        jQuery('.dyn-title-name-preview').css({"color":"#"+jQuery('.tmp_title_text_color').val()});
                        jQuery('.sub_category_description').css({"color":"#"+jQuery('.overlay_text_css').val()});
                        //Added by KR DE449
                        jQuery('.sub_category_text_color').css({"color":"#"+jQuery('.subcategory_heading_text_css').val()});
                 
                          jQuery('.overlay_background_cls').css({"background-color":"#"+jQuery('.overlay_background_css').val()});
                          jQuery('.sub_category_hover').css({"background-color":"#"+jQuery('.subcategory_background_css').val()});
                        });
                
                        /* jQuery('.dyn-title-name-preview').css({"opacity":+jQuery('.tmp_title_text_alpha').val()/100});
                           jQuery('.AlphaInput').change(function() {
                           jQuery('.dyn-title-name-preview').css({"opacity":+jQuery('.tmp_title_text_alpha').val()});
                                 });
                       */
    
//Dynamic CSS changes with Jquery and CSS

                    jQuery(".tmp_title_text_alpha").keyup(function(){
                         //jQuery('.dyn-title-name-preview').css({"opacity":+jQuery('.tmp_title_text_alpha').val()/100});
                        var titleTextAlpha_j = jQuery('input.tmp_title_text_alpha').val();
                        createSlider_title('slider_title','disp','titleBarTextAlpha',titleTextAlpha_j,0,100);
                    });
            jQuery(".tmp_intro_text_alpha").keyup(function(){
                var introTextAlpha_j  = jQuery('input.tmp_intro_text_alpha').val();
            createSlider_intro('slider_intro','disp','introTextAlpha',introTextAlpha_j,0,100);
            
            
                });
                
                jQuery(".tmp_button_text_alpha").keyup(function(){
            var titleTextAlpha_j = jQuery('input.tmp_button_text_alpha').val();
               createSlider_button('slider_button','disp','buttonTextAlpha',titleTextAlpha_j,0,100);
            
            
                }); 
                
                
                jQuery(".overlay_background_alpha").keyup(function(){
            var overlaybackground_j = jQuery('input.overlay_background_alpha').val();
               createSlider_overlay('slider_overlay','disp','overlayBackgroundAlpha',overlaybackground_j,0,100);
            
            
                }); 
                
            
            jQuery(".tmp_title_text").keyup(function(){
               
            jQuery(".dyn-title-name-preview").html(jQuery('.tmp_title_text').val());
            
                });
                
                
            jQuery(".tmp_title_text_alpha").keyup(function(){
               
             jQuery('.dyn-title-name-preview').css({"opacity":+jQuery('.tmp_title_text_alpha').val()/100});
             
                });
                
                jQuery(".overlay_background_alpha").keyup(function(){
               
             jQuery('.overlay_background_cls').css({"opacity":+jQuery('.overlay_background_alpha').val()/100});
             
                });
                
                jQuery(".switch_others").click(function(){
            jQuery(".switch_AppConfig").trigger('click');
            
            });
            
             jQuery(".sub-category-tree-item").click(function(){
            
            
            jQuery("#category_selected").removeClass("show_division").addClass("hide_division");
            
            });
            
             jQuery(".category-tree-item").click(function(){
            
            jQuery("#category_selected").removeClass("hide_division").addClass("show_division");
            
            });
            
            
            
            
             jQuery(".select_home_preview").click(function(){
                 setTimeout(function() {
                    jQuery(".switch_home").get(0).click();
                }, 500);
            
            });
            
            
            
              jQuery('.tmp_title_text_alpha').mouseover(function() {
              
               //jQuery('.dyn-title-name-preview').hide(400);
            //jQuery('.dyn-title-name-preview').show(400);
              jQuery('.dyn-title-name-preview').effect("shake", { times:1 }, 400);
            }); 
            
            
              jQuery('.tmp_button_text_alpha').mouseover(function() {
              jQuery('.button-text-wrapper').effect("pulsate", { times:1 }, 2000);
            }); 
            
              jQuery('.tmp_title_text').mouseover(function() {
               //jQuery('.dyn-title-name-preview').hide(400);
            //jQuery('.dyn-title-name-preview').show(400);
              jQuery('.dyn-title-name-preview').effect("shake", { times:1 }, 2000);
            }); 
            
            
              jQuery('.logo_input_file_cls').mouseover(function() {
              jQuery('.logo_preview_cls').effect("pulsate", { times:1 }, 2000);
            });  
            
            
            
              jQuery('.main_Landscape_background').mouseover(function() {
              jQuery('.landscape-to-scale').effect("pulsate", { times:1 }, 2000);
            }); 
            
              jQuery('.main_portrait_background').mouseover(function() {
              jQuery('.portrait-to-scale').effect("pulsate", { times:1 }, 2000);
            }); 
            
            
              jQuery('.Landing_page_layout_cls').mouseover(function() {
              jQuery('.custom-button').effect("pulsate", { times:1 }, 2000);
            });  
            
            
            
              jQuery('.overlay_background_alpha').mouseover(function() {
            
              jQuery('.overlay_background_cls').hide(400);
            jQuery('.overlay_background_cls').show(400);
            }); 
            
              jQuery('.subcategory_gallery_image').mouseover(function() {
              jQuery('.category_image_preview').effect("pulsate", { times:1 }, 2000);
            }); 
               
            
              jQuery('.Category_Landscape_bg_cls').mouseover(function() {
              jQuery('.category_l_bg_preview').effect("pulsate", { times:1 }, 2000);
            });  
            
            
            
              jQuery('.Category_portrait_bg_cls').mouseover(function() {
              jQuery('.category_p_bg_preview').effect("pulsate", { times:1 }, 2000);
            }); 
            
              jQuery('.Content_List_bg_cls').mouseover(function() {
              jQuery('.content_list_bg_preview').effect("pulsate", { times:1 }, 2000);
            }); 
              jQuery('.Landing_page_layout_cls').mouseover(function() {
              jQuery('.background-wrapper').effect("pulsate", { times:1 }, 2000);
            }); 
            
              jQuery('.main_button_bg_cls').mouseover(function() {
              jQuery('.background-wrapper').effect("pulsate", { times:1 }, 2000);
            }); 
            
            
            
            //done here - starting right to left highlighting
              jQuery('.dyn-title-name-preview').mouseover(function() {
              jQuery('.Application_title_div_cls').effect("pulsate", { times:1 }, 2000);
            });  
            
             jQuery('.dyn-title-name-preview').mouseover(function() {
              jQuery('.tmp_title_text').effect("pulsate", { times:1 }, 2000);
            });  
            
              jQuery('.logo_preview_cls').mouseover(function() {
              jQuery('.logo_input_file_cls').effect("pulsate", { times:1 }, 2000);
            });  
            
            
              jQuery('.landscape-to-scale').mouseover(function() {
              jQuery('.main_Landscape_background').effect("pulsate", { times:1 }, 2000);
            }); 
            
              jQuery('.portrait-to-scale').mouseover(function() {
              jQuery('.main_portrait_background').effect("pulsate", { times:1 }, 2000);
            }); 





        showAsDialog('promptLoading');  
        jQuery.fn.jPicker.defaults.images.clientPath = "{!URLFOR($Resource.DSA_Assets, 'images/images')}/";
        var id = '{!mobileAppConfig.id}';
        var macId = '{!mobileAppConfig.id}';
        
         var categoryConfigId = null;
        
        // load content after select category to edit
        var landscapeWidth = 640;
        var landscapeHeight = 472;
        var portraitWidth = 567;
        var portraitHeight = 680;

        var defaultLandscapeWidth = 1024; // 1.55151
        var defaultLandscapeHeight = 768;
        var defaultPortraitWidth = 768; // 0,885
        var defaultPortraitHeight = 1024;
        
        var zoomLandscapeWidth = 1024;
        var zoomLandscapeHeight = 768;
        var zoomPortraitWidth = 768;
        var zoomPortraitHeight = 1024;
        
        var imgButtonFlag = false;

            function createSlider_title(destination,dispOutput,titleBarTextAlpha,startVal,minVal,maxVal){
               jQuery("#"+destination).slider({ 
                   range: false,  
                   min: minVal,
                    max: maxVal,
                    values: [startVal],
                    slide: function(event, ui){ 
                   //This function executes every time slider is moved and applies the slider values  
                   //to the input fields as well as the output below the slider
                         jQuery('.dyn-title-name-preview').css({"opacity":ui.values[0]/100});
                       jQuery("[id$="+titleBarTextAlpha+"]").val(ui.values[0]);
                     
                       jQuery("#"+dispOutput).html('alpha' + ui.values[0]);
                    }
                });
                //write the initial value in the display div
               jQuery("#"+dispOutput).html('alpha' + startVal);
           }  
           
            function createSlider_intro(destination,dispOutput,introTextAlpha,startVal,minVal,maxVal){
               jQuery("#"+destination).slider({ 
                   range: false, 
                   min: minVal,
                    max: maxVal,
                    values: [startVal],
                    slide: function(event, ui){ 
                   //This function executes every time slider is moved and applies the slider values  
                   //to the input fields as well as the output below the slider
                      
                     
                       jQuery("[id$="+introTextAlpha+"]").val(ui.values[0]);
                       jQuery("#"+dispOutput).html('alpha' + ui.values[0]);
                    }
                });
                //write the initial value in the display div
               jQuery("#"+dispOutput).html('alpha' + startVal);
           }  
           function createSlider_button(destination,dispOutput,buttonTextAlpha,startVal,minVal,maxVal){
               jQuery("#"+destination).slider({ 
                   range: false, 
                   min: minVal,
                    max: maxVal,
                    values: [startVal],
                    slide: function(event, ui){ 
                   //This function executes every time slider is moved and applies the slider values  
                   //to the input fields as well as the output below the slider
                                             jQuery('.button-text-wrapper').css({"opacity":ui.values[0]/100});
                      
                      
                       jQuery("[id$="+buttonTextAlpha+"]").val(ui.values[0]);
                       jQuery("#"+dispOutput).html('alpha' + ui.values[0]);
                    }
                });
                //write the initial value in the display div
               jQuery("#"+dispOutput).html('alpha' + startVal);
           }  
           
            function createSlider_overlay(destination,dispOutput,overlayBackgroundAlpha,startVal,minVal,maxVal){
               jQuery("#"+destination).slider({ 
                   range: false, 
                   min: minVal,
                    max: maxVal,
                    values: [startVal],
                    slide: function(event, ui){ 
                   //This function executes every time slider is moved and applies the slider values  
                   //to the input fields as well as the output below the slider
                   
                       jQuery("[id$="+overlayBackgroundAlpha+"]").val(ui.values[0]);
                       jQuery("#"+dispOutput).html('alpha' + ui.values[0]);
                    }
                });
                //write the initial value in the display div
               jQuery("#"+dispOutput).html('alpha' + startVal);
           }  

        // functions moved to appJs!!!
        // add button to layout or remove button from layout
        function addOrRemoveButton(categoryId, categoryName, eventType){
            if(typeof categoryId.length == 'undefined' || typeof eventType.length == 'undefined' || typeof categoryName.length == 'undefined' || typeof id.length == 'undefined'){
                return false;
            }
        
            if(categoryId.length == 0 || eventType.length == 0 || categoryName.length == 0 || id.length == 0){
                return false;
            }

            showAsDialog('promptLoading'); 
                       
            if(eventType == 'added'){
                ModelM.App_Config_Controller_JS.addMobileCategoryConfigToMAC(id, categoryId, function(result, event){
                    if(event.status) {
                        //Record added
                        // add button to page
                        jQuery('.selectCategoryList').addClass('editing');                      
                        jQuery('.selectCategoryForId-'+categoryId).addClass('added');
                        jQuery('.selectCategoryList').removeClass('editing');
                        jQuery('.selectCategoryForId-'+categoryId).css('background-color', 'dddddd');                       
                        var preparedLandscapeButton = setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'landscape-button');
                        var preparedPortraitButton = setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'portrait-button');                
                        setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'zoom-portrait-button');                        
                        setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'zoom-landscape-button');                       
                        if(jQuery('#zoom-layout-customizer').hasClass('portrait') && !jQuery('#promptZoom').hasClass('hidden')){
                            //setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'zoom-portrait-button');                        
                        } else if(jQuery('#zoom-layout-customizer').hasClass('landscape') && !jQuery('#promptZoom').hasClass('hidden')){
                            //setLayoutButton(result.Id, categoryName, categoryId , 0, 0, 'zoom-landscape-button');                       
                        }

                        var cmcId = result.Id;
                        renderCategories();
                    } else {
                        showError('Add buttons action failed.');
                    }
                    hideDivDialog('promptLoading');                 
                });
            } else if(eventType == 'removed' && typeof jQuery('span.'+categoryId).parent('div').parent('div').attr('id') != 'undefined' && jQuery('span.'+categoryId).parent('div').parent('div').attr('id').length != 0){
                
                 ModelM.App_Config_Controller_JS.removeMobileCategoryConfigFromMAC1(jQuery('span.'+categoryId).parent('div').parent('div').attr('id'), function(result, event){
                    if(event.status) {
                        
                        //Record deleted
                         var ss = result;
                         ModelM.App_Config_Controller_JS.updateCategoryTree(ss, function(result4, event){
                             if(event.status) {
                             }
                             else{
                                 showError('Delete buttons action failed.');
                             }
                        });
                        // remove item from category-tree
                        var categoryToRemoveFromTree = jQuery('#category-tree').find('div.category-id-'+categoryId); 
                                    
                        jQuery('#category-tree').find('div.sub-for-cmcid-'+categoryToRemoveFromTree.attr('id')).remove();
                        categoryToRemoveFromTree.remove();
                        // remove button from page    
                        jQuery('.selectCategoryList').addClass('editing');
                        jQuery('.selectCategoryForId-'+categoryId).removeClass('added');      
                        jQuery('.selectCategoryList').removeClass('editing');
                        jQuery('.'+categoryId).parent().parent().draggable("destroy");
                        jQuery('.'+categoryId).parent().parent().remove();
                        // load first item to tree
                        if(jQuery('#category-tree').find('.category-tree-item').length != 0){
                            jQuery('#category-tree').find('.category-tree-item').first().find('span.pointer-cursor').trigger('click');
                        } else {
                            hideDivDialog('promptLoading');                        
                        }
                    } else {
                        showError('Remove button action failed.'); 
                        hideDivDialog('promptLoading');                                
                    
                    }                   
                });
            } else {
                showError('Invalid action.');
                hideDivDialog('promptLoading');    
            }
        }
        
        // save dragged button position (drag - stop)
        function buttonDragged(event, ui){
            var draggedButton = jQuery(ui.helper);
            // remove scale before save
            if(draggedButton.hasClass('zoom-portrait-button') || draggedButton.hasClass('zoom-landscape-button')){
                scaleLX = defaultLandscapeWidth / zoomLandscapeWidth;
                scaleLY = defaultLandscapeHeight / zoomLandscapeHeight;
                scalePX = defaultPortraitWidth / zoomPortraitWidth;
                scalePY = defaultPortraitHeight / zoomPortraitHeight;                               
            } else if(draggedButton.hasClass('portrait-button') || draggedButton.hasClass('landscape-button')){
                scalePX = defaultPortraitWidth / portraitWidth;
                scalePY = defaultPortraitHeight / portraitHeight;               
                scaleLX = defaultLandscapeWidth / landscapeWidth;
                scaleLY = defaultLandscapeHeight / landscapeHeight;
            } else {
                showError('Unable to update button position.','Wrong scale.');
                return false;               
            }
            
            ModelM.App_Config_Controller_JS.saveDraggedButton(
                draggedButton.attr('id'),
                ( draggedButton.hasClass('zoom-landscape-button') || draggedButton.hasClass('landscape-button') ) ? (ui.position.left * scaleLX) : '',
                ( draggedButton.hasClass('zoom-landscape-button') || draggedButton.hasClass('landscape-button') ) ? (ui.position.top  * scaleLY) : '',
                ( draggedButton.hasClass('zoom-portrait-button') || draggedButton.hasClass('portrait-button') ) ? (ui.position.left * scalePX) : '',
                ( draggedButton.hasClass('zoom-portrait-button') || draggedButton.hasClass('portrait-button') ) ? (ui.position.top  * scalePY) : '',
                function(result, event){
                    if(event.status) {
                        // 'Button dragged saved'
                    } else {
                        showError('Drag button action failed.');   
                    }
            });
        }
        
        // remove rubbish from layout and option list)
        function cleanUp(result){
        
            var needToDelete = true;
            var temporaryButtonId = null;               
            var temporaryCategoryId = null; 
            
            // CLEAN UP BUTTONS
            jQuery('.custom-button').each(function(){
                if(jQuery(this).attr('id').length != 0){
                    needToDelete = true;
                    temporaryButtonId = jQuery(this).attr('id');
                    jQuery.each(result, function(index,button){
                        if(temporaryButtonId == button.Id){
                            needToDelete = false;
                            return;
                        }
                    });
                    if(needToDelete){
                        jQuery(this).draggable("destroy");                          
                        jQuery(this).remove();
                    }
                } else { // invalid button!
                    jQuery(this).remove();                      
                }           
            });
            
            jQuery('.selectCategory').each(function(){
                jQuery('.selectCategoryList').addClass('editing');            
                if(jQuery(this).attr('value').length != 0){
                    needToDelete = true;
                    temporaryCategoryId = jQuery(this).attr('value');
                    jQuery.each(result, function(index,button){
                        if(temporaryCategoryId == button[packagePrefix+'CategoryId__r'].Id){
                            needToDelete = false;
                            needToCreate = true;                                    
                            return;
                        }
                    });
                    if(needToDelete){
                        if(jQuery(this).hasClass("added")){
                            jQuery(this).removeClass("added");
                        }                           
                    }                       
                } else { // invalid category option!
                    jQuery(this).remove();                      
                }
                jQuery('.selectCategoryList').removeClass('editing');
            });
        }

        // function return button (div) for requested params
        function setLayoutButton(mobileCategoryId, CategoryName, CategoryId, positionX, positionY, buttonExtraClass){
            if(typeof buttonExtraClass == 'undefined' || buttonExtraClass.length ==0){
                showError('Unable to set button','Missing parameter.');
                return false;
            }
            
            if(buttonExtraClass == 'zoom-landscape-button'){
                scaleX = zoomLandscapeWidth / defaultLandscapeWidth;
                scaleY = zoomLandscapeHeight / defaultLandscapeHeight;
                customizer = jQuery('#zoom-layout-customizer'); 
            } else if(buttonExtraClass == 'zoom-portrait-button'){
                scaleX = zoomPortraitWidth / defaultPortraitWidth;
                scaleY = zoomPortraitHeight / defaultPortraitHeight;
                customizer = jQuery('#zoom-layout-customizer'); 
            } else if(buttonExtraClass == 'portrait-button'){
                scaleX = portraitWidth / defaultPortraitWidth;
                scaleY = portraitHeight / defaultPortraitHeight;
                customizer = jQuery('#layout-portrait-customizer');         
            } else if(buttonExtraClass == 'landscape-button'){
                scaleX = landscapeWidth / defaultLandscapeWidth;
                scaleY = landscapeHeight / defaultLandscapeHeight;
                customizer = jQuery('#layout-landscape-customizer');        
            } else {
                showError('Unable to set button.','Wrong scale.');
                return false;               
            }
            
            if(imgButtonSrc != null){
                var buttonWidth = (120 * scaleX)+'px';
                var buttonHeigth = (120 * scaleY)+'px';
                var buttonTextVerticalPostion = '-'+(((120 *scaleY)/2)+5)+'px';               
                var buttonBackgroundSrc = imgButtonSrc;
                imgButtonFlag = true;             
            } else {
                var buttonWidth = 'auto';
                var buttonHegith = 'auto';
                var buttonBackgroundSrc = null;
                var buttonTextVerticalPostion = 'auto';
                imgButtonFlag = false;
            }
            
            if( !isNaN(parseInt(jQuery('.alphaButtonText').val())) ){
                opacityValue = parseInt(jQuery('.alphaButtonText').val());
            } else {
                opacityValue = 100;
            }
            
            var divButton = null;
            if(customizer.find('#'+mobileCategoryId).length == 0){
            
                // add button
                var divButtonString = '<div class="custom-button" id="'+mobileCategoryId+'">';
                    divButtonString += '<div class="custom-button-actions hidden"><div class="removing-button">X</div></div>';                
                    divButtonString += '<div class="background-wrapper" style="position: relative; top: 0px; left: 0px; width: 100%; height: 100%; z-index:100;">'
                    if(buttonBackgroundSrc != null){
                        divButtonString += '<img src="'+buttonBackgroundSrc+'" class="buttonBackgroundImg">';
                    }
                    divButtonString += '</div>';
                    divButtonString += '<div class="button-text-wrapper" style="position: relative; top: '+(buttonTextVerticalPostion)+'; left: 0px; width: 100%; height: 100%;z-index:101;">';
                        var DecodeCategoryName = decodeHTML(CategoryName);
                        divButtonString += '<span class="'+CategoryId+'">'+DecodeCategoryName+'</span>';
                    divButtonString += '</div>';
                divButtonString += '</div>';
            
                divButton = jQuery(divButtonString);
                divButton.draggable({
                    containment: 'parent',
                    stop: buttonDragged
                });
                customizer.append(divButton);
            } else {
                divButton = customizer.find('#'+mobileCategoryId);
                // update button                
                divButton.attr('class','').addClass('custom-button').addClass('ui-draggable').addClass(buttonExtraClass);
                
                if(buttonBackgroundSrc == null){
                    if(divButton.find('.buttonBackgroundImg').length != 0){
                        divButton.find('.buttonBackgroundImg').remove();
                    }
                }
                if(divButton.find('.buttonBackgroundImg').length != 0 && buttonBackgroundSrc != null){
                    divButton.find('.buttonBackgroundImg').attr('src', buttonBackgroundSrc);                
                } else if(divButton.find('.buttonBackgroundImg').length == 0 && buttonBackgroundSrc != null){
                    divButton.find('.background-wrapper').append('<img src="'+buttonBackgroundSrc+'" class="buttonBackgroundImg">');
                }
                divButton.find('.button-text-wrapper').css('top', buttonTextVerticalPostion);
                divButton.find('.button-text-wrapper').css('opacity', (opacityValue/100));
                divButton.find('.button-text-wrapper').find('span').attr('class','').addClass(CategoryId);
                divButton.find('.button-text-wrapper').find('span').text(DecodeCategoryName);
            }
            divButton.css('position','absolute');
            divButton.css('left', (positionX*scaleX));
            divButton.css('top', (positionY*scaleY));
            divButton.css('width', buttonWidth);
            divButton.css('height', buttonHeigth);  
            divButton.find('.buttonBackgroundImg').css('width', '100%');
            divButton.find('.buttonBackgroundImg').css('height', '100%');
            divButton.find('.button-text-wrapper').css('opacity', (opacityValue/100));
            divButton.css('color', '#'+jQuery('.buttonTextColorInput').val());
            divButton.addClass(buttonExtraClass);       
            return divButton;
        }
        
        // init: get information about buttons 
        // get information about buttons (from category mobile configuration for requested mobile configuration id
        // add buttons to layout-customizer
        function reloadButtons(){
            showAsDialog('promptLoading');  
            // RELOAD BUTTONS&LISTS         
            ModelM.App_Config_Controller_JS.getCategoryConfigurationForMobApp(id, true, function(result, event){
                // DE358: DSA Builder Freezes on IE8 
                if (typeof console === 'undefined' || !console.log) {
                      window.console = {
                          log: function() {}
                      };
                } else {
                    // DE358.. ended here..
                console.log('reloadButtons():getCategoryConfigurationForMobApp:id='+id);　
                }
                if(event.status) {
                    // remove not existing (in db) buttons from layout and options from category lists
                    cleanUp(result); 
                    // reset category select list
                    // add not existing (layout) buttons to layout
                    jQuery.each(result, function(index,button){
                        
                        // create landscape button
                        setLayoutButton(button.Id, button[packagePrefix+'CategoryId__r'].Name, button[packagePrefix+'CategoryId__r'].Id, button[packagePrefix+'LandscapeX__c'], button[packagePrefix+'LandscapeY__c'], 'landscape-button');
                        // create portait button
                        setLayoutButton(button.Id, button[packagePrefix+'CategoryId__r'].Name, button[packagePrefix+'CategoryId__r'].Id, button[packagePrefix+'PortraitX__c'], button[packagePrefix+'PortraitY__c'], 'portrait-button');
                        if(!jQuery('.selectCategoryForId-'+button[packagePrefix+'CategoryId__r'].Id).hasClass('added')){
                            jQuery('.selectCategoryList').addClass('editing');
                            jQuery('.selectCategoryForId-'+button[packagePrefix+'CategoryId__r'].Id).addClass('added');
                            jQuery('.selectCategoryList').removeClass('editing');                           
                        }
                    });
                } else if (event.type === 'exception') {    
                    showError('Unable to load buttons.', event.message);                
                } else {
                    showError('Unable to load buttons.', event.message);                
                }
                hideDivDialog('promptLoading');            
            }, {escape:true});

        }
        
        
        
        jQuery("img").each(function(i, elem){
            if (jQuery(elem).attr('id').search('imgButton') != -1){
                if(!jQuery(elem).hasClass('imgButton')){
                    jQuery(elem).addClass('imgButton')
                }
            }
        });
        
        

        if(jQuery('.imgButton').length != 0){
            var imgButtonSrc = jQuery('.imgButton').attr('src');
            var imgButtonWidth = jQuery('.imgButton').width();          
            var imgButtonHeight = jQuery('.imgButton').height();
        } else {
            var imgButtonSrc = null;
            var imgButtonWidth = 0;         
            var imgButtonHeight = 0;
        }
        

        jQuery('.imgButton').load(function(){
            imgButtonSrc = jQuery(this).attr('src');
            imgButtonWidth = jQuery(this).width();          
            imgButtonHeight = jQuery(this).height();
            reloadButtons()
        });
         
        
        // scale background images to layout customizer divs
        if(jQuery('.portrait-to-scale').length != 0){
            jQuery('.portrait-to-scale').css('width', portraitWidth );
            jQuery('.portrait-to-scale').css('height', portraitHeight );
        }
        if(jQuery('.landscape-to-scale').length != 0){
            jQuery('.landscape-to-scale').css('width', landscapeWidth );
            jQuery('.landscape-to-scale').css('height', landscapeHeight );
        }       
        
        // init: add classes and bind plugins to input elemenets
        jQuery('input[type=text]').each(function(i, elem){
            if (jQuery(elem).attr('id').search('buttonTextPickColor') != -1){
                if(!jQuery(elem).hasClass('buttonTextColorInput')){
                    jQuery(elem).addClass('buttonTextColorInput');    
                }            
            }                
            if (jQuery(elem).attr('id').search('PickColor') != -1){
                if(!jQuery(elem).hasClass('colorPickerBind')){
                    bindColorPicker(jQuery(elem));
                    jQuery(elem).addClass('colorPickerBind');                   
                }
            }
            if (jQuery(elem).attr('id').search('Alpha') != -1){
                if(!jQuery(elem).hasClass('AlphaInput')){
                    jQuery(elem).addClass('AlphaInput');            
                    jQuery(elem).attr('size',3);
                    jQuery(elem).attr('maxlength',3);
                    jQuery(elem).numeric(false);
                    jQuery(elem).focusout(function(event){
                        var elemVal = parseInt(jQuery(this).val());
                        if(isNaN(elemVal) || elemVal < 0) {
                            jQuery(this).val(0);
                        }
                        if(!isNaN(elemVal) && elemVal > 100) {
                            jQuery(this).val(100);
                        }                       
                    });
                }                
            }
            if (jQuery(elem).attr('id').search('buttonTextAlpha') != -1){
                if(!jQuery(elem).hasClass('alphaButtonText')){
                    jQuery(elem).addClass('alphaButtonText');
                }         
            }            
        });
        
        var alphaInput;
        var sliderObject;
        
        jQuery('.user-panel-content').bind('click', function(e) {
            if(e.target != this) { return true; }
            sliderObject.fadeOut("fast");
        });
        
        alphaInput = jQuery("[id$=titleBarTextAlpha]");
        alphaInput.bind('focus', function(e) {
            if(sliderObject) {
                sliderObject.fadeOut("fast");
            }
            sliderObject = jQuery("#slider_title_container");
            sliderObject.fadeIn("fast");
        });

        alphaInput = jQuery("[id$=introTextAlpha]");
        alphaInput.bind('focus', function(e) {
            if(sliderObject) {
                sliderObject.fadeOut("fast");
            }
            sliderObject = jQuery("#slider_intro_container");
            sliderObject.fadeIn("fast");
        });

        alphaInput = jQuery("[id$=buttonTextAlpha]");
        alphaInput.bind('focus', function(e) {
            if(sliderObject) {
                sliderObject.fadeOut("fast");
            }
            sliderObject = jQuery("#slider_button_container");
            sliderObject.fadeIn("fast");
        });
        
        
        jQuery('.jPicker').mouseover(function() {
            var siblings = jQuery(this).parent().children(':first-child').attr('class');
            var first_sibling_class = siblings.split(' ')[0];
            if(first_sibling_class == "tmp_title_bg_color"){
                //jQuery('.dyn-title-bg-preview').effect("pulsate", { times:1 }, 2000);
            }else if(first_sibling_class == "tmp_title_text_color"){
                jQuery('.dyn-title-name-preview').effect("shake", { times:1 }, 400);
            }else if(first_sibling_class == "tmp_button_text_color"){
                jQuery('.button-text-wrapper').effect("pulsate", { times:1 }, 2000);
            }else if(first_sibling_class == "tmp_button_highlight_text_color"){
                jQuery('.button-text-wrapper').effect("pulsate", { times:1 }, 2000);
            }
        });
        

        
        
        jQuery('.alphaButtonText').focusout(function(){
            updateTextButtons();
        })
        
        // init: add classes to checkbox elemenets
        jQuery('input[type=checkbox]').each(function(i, elem){
            if (jQuery(elem).attr('id').search('bundleCheckbox') != -1){
                if(!jQuery(elem).hasClass('isBundleCheckbox')){
                    jQuery(elem).addClass('isBundleCheckbox');
                }
            }                   
        });
                
        // init: add classes to select elemenets
        jQuery("select").each(function(i, elem){
            
            // same categories but from different lists
            if (jQuery(elem).attr('id').search('portraitCategoryList') != -1 || jQuery(elem).attr('id').search('landscapeCategoryList') != -1 || jQuery(elem).attr('id').search('zoomCategoryList') != -1){
                if(!jQuery(elem).hasClass('selectCategoryList')){
                    jQuery(elem).addClass('selectCategoryList');
                }            
                jQuery('option',elem).each(function(i,cat){
                    if(!jQuery(cat).hasClass('selectCategory')){
                        jQuery(cat).addClass('selectCategory');
                        jQuery(cat).addClass('selectCategoryForId-'+jQuery(cat).attr('value'));
                    }                    
                });
            }
        });
        
        

        
        // add category to layout: manage three different list
        jQuery('.selectCategoryList').change(function(){
            var selectedCatObj = jQuery(this).find("option:selected").first();
            if(selectedCatObj.length != 0 && !jQuery(this).hasClass('editing') && selectedCatObj.val() != 'SelectCategory'){
                var categoryId = encodeHTML(selectedCatObj.val());
                var categoryName = encodeHTML(selectedCatObj.text());    
                if(!selectedCatObj.hasClass('added')){
                // add
                    addOrRemoveButton(categoryId, categoryName, 'added');
                } else {
                // remove
                    addOrRemoveButton(categoryId, categoryName, 'removed');
                }
            }
            selectedCatObj.focusout();
            selectedCatObj.attr('selected', 'false');
            jQuery('.selectCategoryList').val('SelectCategory');
            jQuery(this).find("option").each(function(){
                if(jQuery(this).val() == 'SelectCategory'){
                    jQuery(this).attr('selected', 'true');
                    return;
                }
            });
            jQuery('.selectCategoryList').focus().blur();
        }).change();        

        jQuery('.rich-tab-header').live('click', function(){
            if(jQuery(this).hasClass('rich-tab-disabled')){
                showError('Cannot open this section.', 'No data to manage.');
            }
        });

        // get current category config id
        jQuery('.category-tree-item').live('click',function(){
            if(categoryConfigId != jQuery(this).attr('id')){
                categoryConfigId = jQuery(this).attr('id');
            }
        });

        jQuery('.indicator-expand-category').live('click',function(event){
            event.preventDefault();     
            if(jQuery(this).parent().attr('id').length !=0){
                if(jQuery(this).hasClass('collapsed') ){
                    jQuery(this).removeClass('collapsed').addClass('expanded');
                    jQuery(this).text('-');             
                    jQuery('.category-tree-holder').find('.sub-for-cmcid-'+jQuery(this).parent().attr('id')).removeClass('hidden');
                } else if(jQuery(this).hasClass('expanded') ){
                    jQuery(this).text('+');
                    jQuery(this).addClass('collapsed').removeClass('expanded');                    
                    jQuery('.category-tree-holder').find('.sub-for-cmcid-'+jQuery(this).parent().attr('id')).addClass('hidden');
                }
            }
        
        });
        
        
        jQuery('.sub-category-tree-item ').removeClass('hidden');
            jQuery('.indicator-expand-category').removeClass('collapsed').addClass('expanded');
            jQuery('.indicator-expand-category').text('-');
            
            if(jQuery('#category-tree').find('.category-tree-item').length != 0){
//            jQuery('#category-tree').children(':nth-child(2)').trigger('click');
  //     jQuery('#category-tree').children(':nth-child(1)').children(':nth-child(2)').trigger('click');
       
       var first_subcat = jQuery('#category-tree').children(':nth-child(2)').attr('id');
       
       if(first_subcat != 0){
       
       jQuery('#'+first_subcat).click(function(){
       jQuery('#Img_Icon_'+first_subcat).effect("pulsate", { times:1 }, 2000);
      });
      

       
       }
       
       
       
      
     
}
        

        // if bundle: show/hide part of page
        jQuery('.isBundleCheckbox').live('click',function(){
            var showHide = jQuery(this).attr('checked');
            showAsDialog('promptLoading');               
            jQuery("div").each(function(i, elem){
                if (jQuery(elem).attr('id').search('cicBlock') != -1){
                    if(showHide){
                        jQuery(elem).hide();
                    } else {
                        jQuery(elem).show();                    
                    }
                    return true;
                }
            });     

        });
        
        
        
       
        
        jQuery('.customTabHeader').live('click', function(){
            jQuery('.customTabHeader').removeClass('BGactive');
            jQuery(this).addClass('BGactive');
            jQuery('.customTabHeader').children(':first-child').removeClass('active');
            jQuery(this).children(':first-child').addClass('active');
            
        
        });

        // if checkbox is set as default clicked, check for others default
        jQuery('.isDefaultChbx').live('click', function(){
            if(jQuery(this).attr('checked') == true){
                ModelM.App_Config_Controller_JS.isOtherDefaultCategoryConfiguration(categoryConfigId, id, function(result, event){
                    if(event.status) {  
                        if(result != 0){
                            showAsDialog('promptOtherDefault');                        
                        }
                    } else if (event.type === 'exception') {    
                        showError('Check if other default configuration exist failed.', event.message);                
                    } else {
                        showError('Check if other default configuration exist failed.', event.message);                
                    }
                }, {escape:true});     
            } else {
                hideDivDialog('promptOtherDefault');              
            }
        });

        // button actions: click

        // add top level category dialog
        jQuery('.addTopLevelCategory').click(function(event){
            event.preventDefault();
            showAsDialog('promptAddTopLevelCategory')
        });
        // add category dialog
        jQuery('.addCategory').click(function(event){
            event.preventDefault();
            showAsDialog('promptAddCategory');
        });
        // delete (global) dialog     
        jQuery('.deleteButton').click(function(event){
            event.preventDefault();
            showAsDialog('promptDelete');
        });        
        // cancel delete (global)         
        jQuery('#cancelDeleting').click(function(event){
            event.preventDefault();
            hideDivDialog('promptDelete');   
        });
        
        // cancel open warning (global)         
        jQuery('#cancelWarning').click(function(event){
            event.preventDefault();
            hideDivDialog('openWarning'); 
            warningAndWindowClose();  
        });
        
        // TODO SW
        jQuery('.deleteSubButton').click(function(event){   
            event.preventDefault();
            showAsDialog('promptSubDelete');
        });
       /* jQuery('#cancelSubDeleting').click(function(event){
            event.preventDefault();
            hideDivDialog('promptSubDelete');   
        });
        */
        
        // confirm set as default configuration
        jQuery('#changeDefaultConfiguration').click(function(event){
            event.preventDefault();
            hideDivDialog('promptOtherDefault');               
        });
        // cancel set as default configuration
        jQuery('#cancelDefaultConfiguration').click(function(event){
            event.preventDefault();
            hideDivDialog('promptOtherDefault');               
            jQuery('.isDefaultChbx').attr('checked', false);
        });
        // close error box
        jQuery('#closeError').click(function(event){
            event.preventDefault();
            hideDivDialog('promptError');
            jQuery('#error-msg').text('');
            jQuery('#error-msg-nofity').text('');
        });          
        // confirm add Top Level category
        jQuery('#saveTopLevelCategory').click(function(event){
            event.preventDefault();
            if(jQuery('#new-top-level-cateogry-name').length != 0){
                var categoryNameField = jQuery('#new-top-level-cateogry-name');
               // var categoryLanguageField = jQuery('#new-top-level-cateogry-language');
                if(categoryNameField.val().length > 0 && categoryNameField.val().length < 80){
                    var categoryName = encodeHTML(categoryNameField.val());
                    var categoryNameActual = categoryNameField.val();
                 // var clanguage = categoryLanguageField.val();
                    ModelM.App_Config_Controller_JS.addCategory(categoryNameActual, '', function(result, event){
                        if(event.status) {
                            if(result.Id != null && result.Id != ''){
                                jQuery('.selectCategoryList').append('<option class="selectCategory selectCategoryForId-'+result.Id+'" value="'+result.Id+'">'+categoryName+'</option>');
                            }else{
                                showError('Category already exists. Please use other name and try again.');
                            }                        
                        } else {
                            showError('Add category failed.');                                  
                        }
                    });                 
                    hideDivDialog('promptAddTopLevelCategory');
                } else {
                    // invalid input
                }
            }
            
        });
        
        // cancel add top level categories
        jQuery('#cancelAddTopLevelCategory').click(function(event){
            event.preventDefault();
            hideDivDialog('promptAddTopLevelCategory');               
        });
           
        // confirm add N-Level category
        jQuery('#saveCategory').click(function(event) {
            var mobileAppConfigId = '{!mobileAppConfig.Id}';
            var categoryName      = jQuery('input#cateogry-name').val();
            var parentCategory    = jQuery('select#selectParentCategory').val();
            
            ModelM.App_Config_Controller_JS.addCategory2(mobileAppConfigId, categoryName, parentCategory, function(result, event) {
                if(!handleRemotingError(event)) {
                    renderCategories();
                }
            });
        });
        
        // cancel add category
        jQuery('#cancelAddCategory').click(function(event){
            event.preventDefault();
            hideDivDialog('promptAddCategory');               
        });    

        jQuery('.openZoom').click(function(event){
            // we have only one "zoom-compositor" (both for portrait and landscape)
            event.preventDefault();
            showAsDialog('promptLoading');  
            errorFlag = false;
            isPortrait = false;
            isLandscape = false;
                        
            if(jQuery(this).hasClass('landscape-zoom')){
                currentZoomWidth = zoomLandscapeWidth;
                currentZoomHeight = zoomLandscapeHeight;
                backgroundImgDiv = jQuery('.layout-landscape-background').clone();
                backgroundImgDiv.removeClass('layout-landscape-background');
                isLandscape = true;             
                buttonType = 'zoom-landscape-button';
                jQuery('#zoom-layout-customizer').addClass('landscape').removeClass('portrait');
            } else if(jQuery(this).hasClass('portrait-zoom')){
                currentZoomWidth = zoomPortraitWidth;
                currentZoomHeight = zoomPortraitHeight;
                backgroundImgDiv = jQuery('.layout-portrait-background').clone();
                backgroundImgDiv.removeClass('layout-portrait-background');
                isPortrait = true;              
                buttonType = 'zoom-portrait-button';
                jQuery('#zoom-layout-customizer').addClass('portrait').removeClass('landscape');
            } else {
                showError('Unable to open zoom.','Invalid zoom type.');
                errorFlag = true;
            }

            if(!errorFlag){
                // set zoom size
                jQuery('#zoom-layout-customizer').css('width', currentZoomWidth);
                jQuery('#zoom-layout-customizer').css('height', currentZoomHeight);
                
                // reset background img             
                jQuery('#zoom-layout-customizer').find('.layout-zoom-background').remove();
                backgroundImgDiv.addClass('layout-zoom-background');
                jQuery('#zoom-layout-customizer').append(backgroundImgDiv);
                jQuery('.layout-zoom-background').find('img').attr('class', '');                
                jQuery('.layout-zoom-background').find('img').css('width', currentZoomWidth);               
                jQuery('.layout-zoom-background').find('img').css('height', currentZoomHeight);                     
                
                // we remove all button from zoom layout        
                jQuery('#zoom-layout-customizer').find('.custom-button').remove();
                
                ModelM.App_Config_Controller_JS.getCategoryConfigurationForMobApp( id, true, function(result, event){
                     console.log('.openZoom:getCategoryConfigurationForMobApp:id='+id);　
                    
                    if(event.status) {

                        jQuery.each(result, function(index,button){
                            // set button
                            if(isLandscape && !isPortrait) {
                                setLayoutButton(button.Id, button[packagePrefix+'CategoryId__r'].Name, button[packagePrefix+'CategoryId__r'].Id, button[packagePrefix+'LandscapeX__c'], button[packagePrefix+'LandscapeY__c'], 'zoom-landscape-button');
                            } else if(!isLandscape && isPortrait) {                     
                                setLayoutButton(button.Id, button[packagePrefix+'CategoryId__r'].Name, button[packagePrefix+'button.CategoryId__r'].Id, button[packagePrefix+'PortraitX__c'], button[packagePrefix+'PortraitY__c'], 'zoom-portrait-button');
                            } else {
                                showError("Unable to create button.","Invalid parameters.")
                                return false;
                            }
                            if(!jQuery('.selectCategoryForId-'+button[packagePrefix+'CategoryId__r'].Id).hasClass('added')){
                                jQuery('.selectCategoryList').addClass('editing');                              
                                jQuery('.selectCategoryForId-'+button[packagePrefix+'CategoryId__r'].Id).addClass('added');
                                jQuery('.selectCategoryList').removeClass('editing');                                   
                            }                           
                        });
                        showAsDialog('promptZoom');                     
                    } else if (event.type === 'exception') {    
                        showError('Unable to load buttons.', event.message);                
                    } else {
                        showError('Unable to load buttons.', event.message);                
                    }
                    hideDivDialog('promptLoading');            
                }, {escape:true});
           } else {
                hideDivDialog('promptLoading');
           }
        });  
        jQuery('#doneZoom').click(function(event){
            event.preventDefault();
            // hide zoom            
            hideDivDialog('promptZoom');
            // reload buttons positioning
            reloadButtons();            
        });
        jQuery('.reloadLayoutCustomizers').click(function(event){
            event.preventDefault();
            // reload buttons positioning
            reloadButtons();            
        });
        
        jQuery('.custom-button').live('mouseover',function(){
            if(!jQuery(this).hasClass('button-mouse-over')){
                jQuery(this).addClass('button-mouse-over');
                if(jQuery(this).find('.custom-button-actions').length != 0){
                    jQuery(this).find('.custom-button-actions').removeClass('hidden');
                }
            }
        });
        jQuery('.custom-button').live('mouseout', function(){
            if(jQuery(this).hasClass('button-mouse-over')){
                jQuery(this).removeClass('button-mouse-over');
                if(jQuery(this).find('.custom-button-actions').length != 0){
                    jQuery(this).find('.custom-button-actions').addClass('hidden');
                }
            }
        });
        jQuery('.removing-button').live('click', function(){
            var customButton = jQuery(this).parents('.custom-button');
            if(customButton.length != 0){
                categoryId = encodeHTML(customButton.find('span').attr('class'));
                categoryName = encodeHTML(customButton.find('span').text());
            }
            if(categoryId.length != 0 && categoryName.length != 0){
                addOrRemoveButton(categoryId, categoryName, 'removed');
            }           
        }); 
        
        reloadButtons();
        jQuery('.AlphaInput').each(
            function(idx, obj) {
                if( !isNaN(parseInt(jQuery(obj).val()))) {
                    jQuery(obj).val(parseInt(jQuery(obj).val()));
                } else {
                    jQuery(obj).val(100);
                }
            }
        )
    
                    //  END: previous code from $(document).ready();
                });
                //  END: document ready, execute the following
                
                
                //  BEGIN: universal functions for DOM use
                
                
                

               
               var selectedTabIndex = 1;
               
            function doTabClick(index) { 
             //refreshCatList('{!mobileAppConfig.Id}');
             //MM dev Nov 9 work around for nicescroll stop working
            console.log('VF:Configurator:doTabClick():getNiceScroll().resize() 1' );
            jQuery('#tabContentLeftScroller').getNiceScroll().resize();
            jQuery('#tabContentRightScroller').getNiceScroll().resize();
           var tabHeaderID = "#tabHeader_" + selectedTabIndex;
                       
                        tabHeaderID = "#tabHeader_" + index;
                       
                      jQuery('.customTabHeader').removeClass('BGactive');
            jQuery(tabHeaderID).addClass('BGactive');
            jQuery('.customTabHeader').children(':first-child').removeClass('active');
            jQuery(tabHeaderID).children(':first-child').addClass('active');
            
           
                        var oldContentID = "#tabContent_" + selectedTabIndex;
                        var newContentID = "#tabContent_" + index;
                        
                        jQuery(oldContentID).css({
                          display: "none"
                        });
                        jQuery(newContentID).css({
                           display: "block"
                        });
                        jQuery('#tabContentLeftScroller').niceScroll();
                        
                        jQuery(newContentID).niceScroll();
                        //jQuery('#tabContent_1').niceScroll();
                        
                        selectedTabIndex = index;
                        saveToDraftDebug();
                        //Added
                         if({!isSubCategorySelected}){          
                            onCompleteSelectSubCategory('{!selectedCategory.Id}');
                         }
                        //Added Raj
                        if({!!categoryLevels}){
                            jQuery("#giBlock").hide();
                         }  
                        //MM dev Nov 9 work around for nicescroll stop working
                        console.log('VF:Configurator:doTabClick():getNiceScroll().resize() 2' );
                        jQuery('#tabContentLeftScroller').getNiceScroll().resize();
                        jQuery('#tabContentRightScroller').getNiceScroll().resize();
                 };
                    
                 jQuery(".overlay_background_alpha").keyup(function(){
                 var overlaybackground_j = jQuery('input.overlay_background_alpha').val();
                createSlider_overlay('slider_overlay','disp','overlayBackgroundAlpha',overlaybackground_j,0,100);
                //createSlider_overlayNew('slider_overlay','disp','overlayBackgroundAlpha',overlaybackgroundjNew,0,100);
                
            }); 
                    
                
                    
                
                                    
                 jQuery('.overlay_background_alpha').mouseover(function() {
                    //$("span").show(2000);
                    jQuery('.overlay_background_cls').hide(400);
                    jQuery('.overlay_background_cls').show(400);
                    //jQuery('.overlay_background_cls').effect("pulsate", { times:1 }, 2000);
                }); 
                                    

    
                function createSlider_overlayNew(destination,dispOutput,overlayBackgroundAlpha,startVal,minVal,maxVal){
                            var containerID = destination + "_container";
                            var jDest = jQuery("#"+destination);
                            var htmlText = '' +
                                '<img src="{!URLFOR($Resource.DSA_Assets, 'images/SliderBackground.png')}" style="position:absolute; top:-20px; left:145px;"></img>' +
                                '<div id="' + containerID + '" style="top:33px; left: 174px;"/>';
                            jDest.html(htmlText);
                            jDest.css({
                                display: "none",
                                position: "absolute",
                                width: "370px",
                                zIndex: "3"
                            });
                
                           jQuery("#"+containerID).slider({ 
                               range: false, 
                               min: minVal,
                                max: maxVal,
                                values: [startVal],
                                slide: function(event, ui){ 
                               //This function executes every time slider is moved and applies the slider values  
                               //to the input fields as well as the output below the slider
                                   jQuery('.overlay_background_cls').css({"opacity":ui.values[0]/100});
                                   jQuery("[id$="+overlayBackgroundAlpha+"]").val(ui.values[0]);
                                   jQuery("#"+dispOutput).html('alpha' + ui.values[0]);
                                }
                            });
                            //write the initial value in the display div
                           jQuery("#"+dispOutput).html('alpha' + startVal);
                           
                            jQuery("[id$="+overlayBackgroundAlpha+"]").bind('focus', function(e) {
                                jQuery("#"+destination).fadeIn("fast");
                            });
                            
                            jQuery("[id$=thePanel]").bind('click', function(e) {
                                console.log("got click: " + e.target.id);
                                if(e.target != this) { return true; };
                                jQuery("#"+destination).fadeOut("fast");
                            });
                            
                       }  

                
                function rebindColorPickers(){
              jQuery('input[type=text]').each(function(i, elem){
                        if (jQuery(elem).attr('id').search('PickColor') != -1){
                            if(!jQuery(elem).hasClass('colorPickerBind')){
                                bindColorPicker(jQuery(elem));
                                jQuery(elem).addClass('colorPickerBind');                   
                            }
                        }
                        if (jQuery(elem).attr('id').search('Alpha') != -1){
                            if(!jQuery(elem).hasClass('AlphaInput')){
                                jQuery(elem).addClass('AlphaInput');            
                                jQuery(elem).attr('size',3);
                                jQuery(elem).attr('maxlength',3);
                                jQuery(elem).numeric(false);
                                jQuery(elem).focusout(function(event){
                                    var elemVal = parseInt(jQuery(this).val());
                                    if(isNaN(elemVal) || elemVal < 0) {
                                        jQuery(this).val(0);
                                    }
                                    if(!isNaN(elemVal) && elemVal > 100) {
                                        jQuery(this).val(100);
                                    }                       
                                });
                            }                
                        }
                    });
                    jQuery('input[type=checkbox]').each(function(i, elem){
                        if (jQuery(elem).attr('id').search('isDefault') != -1){
                            if(!jQuery(elem).hasClass('isDefaultChbx')){
                                jQuery(elem).addClass('isDefaultChbx');
                            }            
                        }                      
                    });
                    
                     jQuery('span.jPicker').each(function(i, el) {
                        jQuery(el).click(function() {
                            var position = jQuery(this).offset();
                            position.top = jQuery(window).height() / 2;
                            var visiblePicker = null;
                            jQuery('div.jPicker.Container').each(function() {
                                if(jQuery(this).css('display') == 'block') {
                                    visiblePicker = this;
                                    position.top -= jQuery(visiblePicker).height() / 2;
                                }
                            });
                            
                            jQuery(visiblePicker).css({
                                top: position.top + 100,
                                left: position.left + 90,
                            });
                        });
                    });
                    
                }
                
        function onCompleteSelectCategory() {
            //MM dev bug fix Nov 8
            //filterByButtonTextAlignField();
            
            var overlaybackgroundjNew = jQuery('input.overlay_background_alpha').val();
            
            createSlider_overlayNew('slider_overlay','disp','overlayBackgroundAlpha',overlaybackgroundjNew,0,100);
          
            rebindColorPickers();
            jQuery('input[type=checkbox]').each(function(i, elem){  
                if (jQuery(elem).attr('id').search('bundleCheckbox') != -1){
                    if(!jQuery(elem).hasClass('isBundleCheckbox')){
                        jQuery(elem).addClass('isBundleCheckbox');
                    }
                }                   
                jQuery('.AlphaInput').each(
                    function(idx, obj) {
                        if( !isNaN(parseInt(jQuery(obj).val()))) {
                            jQuery(obj).val(parseInt(jQuery(obj).val()));
                        } else {
                            jQuery(obj).val(100);
                        }
                    }
                )
            });
            var showHide = jQuery('.isBundleCheckbox').attr('checked');
            /*
            jQuery("div").each(function(i, elem){
                    if (jQuery(elem).attr('id').search('cicBlock') != -1){
                        if(showHide){
                            jQuery(elem).hide();
                        } else {
                            jQuery(elem).show();                    
                        }
                        return true;
                    }
            */
            var el = document.getElementById('cicBlock');
            if(el) {el.style.display='block';}
            //el = document.getElementById('giBlock');
            //if(el) {el.style.display='none';}
            
            
                      jQuery('.jPicker').mouseover(function() {
                            var siblingsx = jQuery(this).parent().children('input:first').attr('class');
                            var first_sibling_classx = siblingsx.split(' ')[0]; 
                            if(first_sibling_classx == "overlay_background_css"){
                                        jQuery('.overlay_background_cls').hide(400);
                                        jQuery('.overlay_background_cls').show(400);
                            } else if(first_sibling_classx == "overlay_text_css"){
                                        jQuery('.sub_category_description').effect("pulsate", { times:1 }, 1000);
                            } else if(first_sibling_classx == "sub_category_bg_css"){
                                        jQuery('.sub_category_hover').effect("pulsate", { times:1 }, 1000);
                            } else if(first_sibling_classx == "subcategory_heading_text_css"){ //Added by KR DE449
                                        jQuery('.sub_category_text_color').effect("pulsate", { times:1 }, 1000);
                            }
                        });
            
                      jQuery('.overlay_background_alpha').mouseover(function() {
             
                            jQuery('.overlay_background_cls').hide(400);
                            jQuery('.overlay_background_cls').show(400);
                        }); 
                    
                            jQuery('.content_list_bg_preview').mouseover(function() {
                            jQuery('.Content_List_bg_cls').effect("pulsate", { times:1 }, 2000);
                        }); 
                       
                    
                            jQuery('.background-wrapper').mouseover(function() {
                            jQuery('.main_button_bg_cls').effect("pulsate", { times:1 }, 2000);
                        });  
                          
    
                        jQuery('.background-wrapper').mouseover(function() {
                            jQuery('.main_button_div_cls').effect("pulsate", { times:1 }, 2000);
                        });  
    
    
                     
                         jQuery('.category_image_preview').mouseover(function() {
                          jQuery('.subcategory_gallery_image').effect("pulsate", { times:1 }, 2000);
                        }); 
                        
                        //reverse highlighitng
                          jQuery('.category_l_bg_preview').mouseover(function() {
                          jQuery('.Category_Landscape_bg_cls').effect("pulsate", { times:1 }, 2000);
                        });  
                        
                        
                        
                          jQuery('.category_p_bg_preview').mouseover(function() {
                          jQuery('.Category_portrait_bg_cls').effect("pulsate", { times:1 }, 2000);
                        }); 
                    
                    
                      jQuery('.overlay_background_cls').mouseover(function() {
                          jQuery('.overlay_background_css').effect("pulsate", { times:1 }, 2000);
                          jQuery('.overlay_background_alpha').effect("pulsate", { times:1 }, 2000);
                        }); 
                         jQuery('.sub_category_description').mouseover(function() {
                          jQuery('.overlay_text_css').effect("pulsate", { times:1 }, 2000);
                        });  
                        jQuery('.sub_category_hover').mouseover(function() {
                          jQuery('.sub_category_bg_css').effect("pulsate", { times:1 }, 2000);
                        }); 
                        //Added by KR DE449
                        jQuery('.sub_category_text_color').mouseover(function() {
                          jQuery('.subcategory_heading_text_css').effect("pulsate", { times:1 }, 2000);
                        }); 

                jQuery('.sub-category-tree-item').click(function(){
                           var s_s_cat = jQuery(this).next().attr('id');
                          
                           jQuery('.sub-category-tree-item').removeClass("sub_category_zoom_out");
                           jQuery('#Img_Iconl_'+s_s_cat).addClass("sub_category_zoom_in");
                           jQuery('.sub-category-tree-item').removeClass("sub_category_zoom_out");
                           jQuery('#Img_Icon_'+s_s_cat).addClass("sub_category_zoom_in");
                       
                  
                      jQuery('#Img_Iconl_'+s_s_cat).effect("pulsate", { times:2 }, 2000);
                     jQuery('#Img_Icon_'+s_s_cat).effect("pulsate", { times:2 }, 2000);
                       
                });
                
                //MM dev Nov 9 work around for nicescroll stop working
                 jQuery('#tabContentLeftScroller').getNiceScroll().resize(); 
                 jQuery('#tabContentRightScroller').getNiceScroll().resize(); 
                 jQuery('#div_sub_category_description').niceScroll();        
        }
    
    
        function onCompleteSelectSubCategory(subCategId){
            rebindColorPickers();
    
            var showHide = jQuery('#scOut1');
            var showHide = jQuery('#scOut12');
            var showHide = jQuery('#scOut13');
            
            //jQuery("#cicBlock").hide();
            jQuery("#giBlock").show();
            //jQuery("#giBlock").show();
            jQuery('#giBlock').css("display","block");
                     
            
            var oldSrc = "/servlet/servlet.FileDownload?file=";
            var imageId;
            jQuery("input").each(function(i, elem){
                    if (jQuery(elem).attr('id').search('theHiddenImageId') != -1){
                            imageId = jQuery(elem).attr('value');
                    }
            });
            var newSrc = oldSrc + imageId;
            jQuery(".categoryImage").attr('src',newSrc);
            
                    jQuery(".sub_category_title_cls").keyup(function(){
                                jQuery(".sub_cat_desc_title").html(jQuery('.sub_category_title_cls').val());
                        });

                    
                   jQuery(".sub_category_desc_cls").keyup(function(){
                   jQuery(".sub_cat_desc_text").html(jQuery('.sub_category_desc_cls').val());
                        });
                    jQuery('.sub_category_parent_cls').mouseover(function() {
                        jQuery('.custom-button').effect("pulsate", { times:1 }, 2000);
                    });  
                    
                    jQuery('.custom-button').mouseover(function() {
                        jQuery('.sub_category_parent_cls').effect("pulsate", { times:1 }, 2000);
                    }); 
                
                     jQuery('.sub_cat_desc_title').mouseover(function() {
                      jQuery('.sub_category_title_cls').effect("pulsate", { times:1 }, 2000);
                    });  
                    jQuery('.sub_cat_desc_text').mouseover(function() {
                      jQuery('.sub_category_desc_cls').effect("pulsate", { times:1 }, 2000);
                    });


        //  This function will schedule a 'saveSubCategory()' call
        // every time any of the fields of the subCategory are
        // updated by the user.  The function cancels a
        // previous schedule if the fields are changed again
        // before the function is called.  This way there
        // aren't multiple calls scheduled at the same time.
        var saveSubCagetoryTimedFunction = function() {
            
            //  If we've already scheduled a call, we cancel it first...
            if(saveSubCategoryTimer) {
                clearTimeout(saveSubCategoryTimer);
            }
            
            //  We schedule a new call to save the sub category's data
            // for 1 second (1000 ms) from now...
            saveSubCategoryId = subCategId;
            saveSubCategoryTimer = setTimeout(tmpSaveSubCategory, 1000);
            
            //  This bit makes sure that the item's name matches in the
            // category tree list.
            jQuery("#" + saveSubCategoryId + "_name").html( jQuery("[id$=subCategoryName]").val() );
        };
        
        jQuery("[id$=subCategoryDescription]").keyup(saveSubCagetoryTimedFunction);
        jQuery("[id$=subCategoryName]").keyup(saveSubCagetoryTimedFunction);
        jQuery("[id$=subCategoryOrder]").keyup(saveSubCagetoryTimedFunction);
        jQuery("[id$=subCategoryTodaysSpecial]").change(saveSubCagetoryTimedFunction);
        jQuery("[id$=selectParentCategory2]").change(saveSubCagetoryTimedFunction); 
        
        //MM dev Nov 9 work around for nicescroll stop working
        console.log('VF:Configurator:onCompleteSelectSubCategory():getNiceScroll().resize()' );
        jQuery('#tabContentLeftScroller').getNiceScroll().resize();
        jQuery('#tabContentRightScroller').getNiceScroll().resize();
        jQuery('#div_sub_category_description').niceScroll();
    }
    
    var saveSubCategoryTimer;
    var saveSubCategoryId;
    function tmpSaveSubCategory() {
        console.log("Updating server...");
        jQuery();
        saveSubCategory();
    }

    function onCompleteIsBundleCategory(){
        rebindColorPickers();
        jQuery('input[type=checkbox]').each(function(i, elem){  
            if (jQuery(elem).attr('id').search('bundleCheckbox') != -1){
                if(!jQuery(elem).hasClass('isBundleCheckbox')){
                    jQuery(elem).addClass('isBundleCheckbox');
                }
            }                   
        });
                        
        hideDivDialog('promptLoading'); 
             
    }
    
    
    function encodeHTML(s){
        return s.replace(/</g, '&lt;').replace(/>/g, "&gt;").replace(/"/g, '&quot;').replace(/\'/g,'&#39');
    }
    
    function decodeHTML(s){
        return s.replace(/&amp;/g,'&');
    }
    
    function deleteCat(){   
        //event.preventDefault();
        showAsDialog('promptSubDelete');
    }
                //  END: universal functions for DOM use
            </script>

                <script type="text/javascript">
               var currentStandingButton= 'brand2';
                var refreshed=0;
                function onPageLoad(){
                showAsDialog('promptLoading');
                
                ShowLandscapePreview_Category();    
                  ShowLandscapePreview();
                hideDivDialog('promptLoading');  
                }
                
                //Please replace this Javascript code to Jquery Show() and hide(): this will reduce lot of lines
                
            function ShowLandscapePreview_Category(){
                
            document.getElementById("category_landscape_background").style.display="block";
            document.getElementById("category_Portrait_background").style.display="none";
            document.getElementById("Category_landscape_switch_active").style.display="block";
            document.getElementById("Category_landscape_switch_inactive").style.display="none";
            document.getElementById("Category_portrait_switch_active").style.display="none";
            document.getElementById("Category_portrait_switch_inactive").style.display="block";
            }
            
            function ShowPortraitPreview_Category(){
                
            document.getElementById("category_Portrait_background").style.display="block";
            document.getElementById("category_landscape_background").style.display="none";
            document.getElementById("Category_landscape_switch_active").style.display="none";
            document.getElementById("Category_landscape_switch_inactive").style.display="block";
            document.getElementById("Category_portrait_switch_active").style.display="block";
            document.getElementById("Category_portrait_switch_inactive").style.display="none";
             
            }
            
            function ShowLandscapePreview(){
               
            document.getElementById("tabLandscape1").style.padding="0px";
            document.getElementById("tabLandscape1").style.display="block";
            document.getElementById("tabPortrait").style.display="none";
            document.getElementById("landscape_switch_active").style.display="block";
            document.getElementById("landscape_switch_inactive").style.display="none";
            document.getElementById("portrait_switch_active").style.display="none";
            document.getElementById("portrait_switch_inactive").style.display="block";
             
            }
            function ShowPortraitPreview(){
             
            document.getElementById("tabPortrait").style.padding="0px";
            document.getElementById("tabLandscape1").style.display="none";
            document.getElementById("tabPortrait").style.display="block";
            document.getElementById("landscape_switch_active").style.display="none";
            document.getElementById("landscape_switch_inactive").style.display="block";
            document.getElementById("portrait_switch_active").style.display="block";
            document.getElementById("portrait_switch_inactive").style.display="none";
             
            }
            
            function updateNumberImage(num){
            
                jQuery(".active_number").removeClass("active_number").addClass("inactive_number");
                jQuery("#number_"+num).toggleClass('active_number inactive_number');
               
                if(num != 4){
                   rebindColorPickers();
                }
            }
            
            function refreshImageButton() {
                    setTimeout(function(){jQuery('.imgButton').trigger('load')}, 1);
                    
                    
                }
                 
                
                
                function saveToDraftDebug() {
                     
                   // var configlanguage           = jQuery('.tmp_config_language option:selected').val();
                    var titleText                = jQuery('input.tmp_title_text').val();
                    var titleBgColor             = jQuery('input.tmp_title_bg_color').val();
                    var titleTextColor           = jQuery('input.tmp_title_text_color').val();
                    var titleTextAlpha           = jQuery('input.tmp_title_text_alpha').val();
                    var introText                = jQuery('input.tmp_intro_text').val();
                    var introTextColor           = jQuery('input.tmp_intro_text_color').val();
                    var introTextAlpha           = jQuery('input.tmp_intro_text_alpha').val();
                    var buttonTextColor          = jQuery('input.tmp_button_text_color').val();
                    var buttonTextAlpha          = jQuery('input.tmp_button_text_alpha').val();
                    var buttonHighlightTextColor = jQuery('input.tmp_button_highlight_text_color').val();
                   
                    saveToDraft( titleText, titleBgColor, titleTextColor, titleTextAlpha, introText, introTextColor, introTextAlpha, buttonTextColor, buttonTextAlpha, buttonHighlightTextColor);
                }
                
                function saveToDraftDebugprofile() {
                   
                    var isActiveConfig           = jQuery('input.tmp_is_active_config').is(':checked');
                    var SelectedProfilesString   = jQuery('select.tmp_profile_list').val().join(';');
                    var checkInEnabled           = jQuery('input.tmp_check_in_enabled').is(':checked');
                    saveToDraftProfile(isActiveConfig, SelectedProfilesString, checkInEnabled);
                }
            
                          
            function Clicked_navigation(){
                //MM dev Nov 8 fixing button text align
                //Raj Commented 01/03
                //filterByButtonTextAlignField();
                setTimeout(function() {
                    jQuery(".switch_CategoryConfig").get(0).click();
                }, 500);
                
            /*
            jQuery('input.Ok').live('click',function() {
                        jQuery('.sub_category_description').css({"color":"#"+jQuery('.overlay_text_css').val()});
                          jQuery('.overlay_background_cls').css({"background-color":"#"+jQuery('.overlay_background_css').val()});
                          jQuery('.sub_category_hover').css({"background-color":"#"+jQuery('.subcategory_background_css').val()});
            )};
            }*/
            }   
            
            function theme_color_clicked(){
            
            rebindColorPickers();
            jQuery('.theme_class').load(function() {
              // Handler for .load() called.
              rebindColorPickers();
            });
            
            }
   
            function next_theme(){
            jQuery(".next_brand").trigger('click');
            }

            var buttonAlignLeft = jQuery("#buttonAlignLeft");
            var buttonAlignCenter = jQuery("#buttonAlignCenter");
            var buttonAlignRight = jQuery("#buttonAlignRight");
            buttonAlignLeft.bind('click', function(e) {
                document.getElementById('{!$Component.form1.pb1.Button_text_align}').value='Left'; 
                buttonAlignLeft.css({
                    backgroundColor: "rgba(245, 245, 245, 0.6)"
                });
                buttonAlignCenter.css({
                    backgroundColor: "transparent"
                });
                buttonAlignRight.css({
                    backgroundColor: "transparent"
                });
            });
            buttonAlignCenter.bind('click', function(e) {
                document.getElementById('{!$Component.form1.pb1.Button_text_align}').value='Center'; 
                buttonAlignLeft.css({
                    backgroundColor: "transparent"
                });
                buttonAlignCenter.css({
                    backgroundColor: "rgba(245, 245, 245, 0.6)"
                });
                buttonAlignRight.css({
                    backgroundColor: "transparent"
                });
            });
            buttonAlignRight.bind('click', function(e) {
                document.getElementById('{!$Component.form1.pb1.Button_text_align}').value='Right'; 
                buttonAlignLeft.css({
                    backgroundColor: "transparent"
                });
                buttonAlignCenter.css({
                    backgroundColor: "transparent"
                });
                buttonAlignRight.css({
                    backgroundColor: "rgba(245, 245, 245, 0.6)"
                });
            });

            </script>
</apex:component>